=================================
Constraint, formal unary negation
=================================

module corpus_test_constraint is

  structure Outer is

    inner -> string is
      assert not_empty is
        not self.is_empty()
      end
    end

    inner_sym -> string is
      assert not_empty is
        Â¬ self.is_empty()
      end
    end

  end

end

---

(module
  (identifier)
  (module_body
    (structure_def
      (identifier)
      (structure_body
        (member
          (member_def
            (identifier)
            (type_reference
              (builtin_types))
            (annotation_only_body
              (annotation
                (constraint
                  (identifier)
                  (formal_constraint
                    (constraint_sentence
                      (boolean_sentence
                        (unary_boolean_sentence
                          (logical_op_negation)
                          (constraint_sentence
                            (simple_sentence
                              (atomic_sentence
                                (term
                                  (function_composition
                                    (reserved_self)
                                    (identifier)))))))))))))))
        (member
          (member_def
            (identifier)
            (type_reference
              (builtin_types))
            (annotation_only_body
              (annotation
                (constraint
                  (identifier)
                  (formal_constraint
                    (constraint_sentence
                      (boolean_sentence
                        (unary_boolean_sentence
                          (logical_op_negation)
                          (constraint_sentence
                            (simple_sentence
                              (atomic_sentence
                                (term
                                  (function_composition
                                    (reserved_self)
                                    (identifier)))))))))))))))))))
